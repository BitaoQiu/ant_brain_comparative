gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
filter = rownames(dds[which(rowMeans(counts(dds)) > 4),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library("pheatmap")
mpha_exp = abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1:3)]- rowMeans(mpha_exp[,c(1:3)]),mpha_exp[,c(4:6)]- rowMeans(mpha_exp[,c(4:6)]),mpha_exp[,c(7:9)]- rowMeans(mpha_exp[,c(7:9)]),
mpha_exp[,c(10:12)]- rowMeans(mpha_exp[,c(10:12)]))
head(mpha_exp)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Aech_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"))
res_gs <- results(dds, contrast=c("condition","gyne","minor"))
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
summary(res_gb)
res_bs <- results(dds, contrast=c("condition","major","minor"))
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
gyne_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),])
worker_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),])
gyne_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),])
worker_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),])
major_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),])
minor_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library("pheatmap")
mpha_exp = abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1:3)]- rowMeans(mpha_exp[,c(1:3)]),mpha_exp[,c(4:6)]- rowMeans(mpha_exp[,c(4:6)]),mpha_exp[,c(7:9)]- rowMeans(mpha_exp[,c(7:9)]),
mpha_exp[,c(10:12)]- rowMeans(mpha_exp[,c(10:12)]))
head(mpha_exp)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Aech_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"))
res_gs <- results(dds, contrast=c("condition","gyne","minor"))
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeq(dds)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
res_gb <- results(dds, contrast=c("condition","gyne","major"))
res_gs <- results(dds, contrast=c("condition","gyne","minor"))
res_gb <- lfcShrink(dds, contrast=c("condition","gyne","major"), res=res_gb)
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res_gb)
res_bs <- results(dds, contrast=c("condition","major","minor"))
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
gyne_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),])
worker_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),])
gyne_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),])
worker_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),])
major_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),])
minor_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),])
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"))
res_gs <- results(dds, contrast=c("condition","gyne","minor"))
summary(res_gb)
summary(res_gs)
493+177
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 4),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
res_bs <- results(dds, contrast=c("condition","major","minor"))
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
gyne_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),])
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
table(gene_age$caste,gene_age$age)
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Aech_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"),alpha = 0.05)
res_gs <- results(dds, contrast=c("condition","gyne","minor"),alpha = 0.05)
summary(res_gb)
summary(res_gs)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"),alpha = 0.05)
res_gb <- lfcShrink(dds, contrast=c("condition","gyne","major"), res=res_gb)
res_gs <- results(dds, contrast=c("condition","gyne","minor"),alpha = 0.05)
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
summary(res_gb)
summary(res_gs)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"),alpha = 0.05)
res_gb <- lfcShrink(dds, contrast=c("condition","gyne","major"), res=res_gb)
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
res_gs <- results(dds, contrast=c("condition","gyne","minor"),alpha = 0.05)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res_gb)
res_bs <- results(dds, contrast=c("condition","major","minor"))
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
gyne_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),])
worker_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),])
gyne_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),])
worker_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),])
major_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),])
minor_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),])
res_bs <- results(dds, contrast=c("condition","major","minor"),alpha = 0.05)
cut_off = 0.05
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off  & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < cut_off & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
summary(res_bs)
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 4),])
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
as.data.frame(table(gene_age$caste,gene_age$age))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Aech_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"),alpha = 0.05)
res_gb <- lfcShrink(dds, contrast=c("condition","gyne","major"), res=res_gb)
res_gs <- results(dds, contrast=c("condition","gyne","minor"),alpha = 0.05)
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res_gb)
res_bs <- results(dds, contrast=c("condition","major","minor"),alpha = 0.05)
cut_off = 0.05
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off  & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < cut_off & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
gene_age = read.table('../../synteny_seven//Aech_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library("pheatmap")
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Aech_age_odd.csv',sep = '\t',quote = F)
write.table(as.matrix(table(gene_age$caste,gene_age$age)),'~/Documents/CSE_Projects/submit/PNAS/Aech_age.tsv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
#aech_files = c(paste('Aech',c(1,2,'3x',4:9,'10x',11,'12x','13x',14,15),sep ='_'))
aech_files = c(paste('Aech',c(4:9,'10x',11,'12x','13x',14,15),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Aech_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
#########
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
cor(txi.salmon$abundance,method = 'p')[seq(3,12,3),seq(3,12,3)]
batch = factor(c(rep(c('gyne','major','minor'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 3)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res_gb <- results(dds, contrast=c("condition","gyne","major"),alpha = 0.05)
res_gb <- lfcShrink(dds, contrast=c("condition","gyne","major"), res=res_gb)
res_gs <- results(dds, contrast=c("condition","gyne","minor"),alpha = 0.05)
res_gs = lfcShrink(dds, contrast=c("condition","gyne","minor"), res=res_gs)
write.table(res_gb, "Aech_gyne_major.csv",quote = F, row.names = T, col.names = T, sep = '\t')
write.table(res_gs, "Aech_gyne_minor.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res_gb)
res_bs <- results(dds, contrast=c("condition","major","minor"),alpha = 0.05)
cut_off = 0.05
gyne_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off  & res_gb$log2FoldChange > 0),]),rownames(res_gb[which(res_gs$padj < cut_off & res_gs$log2FoldChange > 0),]))
major_bias = intersect(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange > 0),]))
minor_bias = intersect(rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]),rownames(res_bs[which(res_bs$padj < cut_off & res_bs$log2FoldChange < 0),]))
worker_bias = union(rownames(res_gb[which(res_gb$padj < cut_off & res_gb$log2FoldChange < 0),]),rownames(res_gs[which(res_gs$padj < cut_off & res_gs$log2FoldChange < 0),]))
worker_bias = worker_bias[!worker_bias %in% c(major_bias,minor_bias)]
#####
gyne_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange > 0),])
worker_bias = rownames(res_gs[which(res_gs$padj < 0.1 & res_gs$log2FoldChange < 0),])
#####
gyne_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange > 0),])
worker_bias = rownames(res_gb[which(res_gb$padj < 0.1 & res_gb$log2FoldChange < 0),])
####
major_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange > 0),])
minor_bias_2 = rownames(res_bs[which(res_bs$padj < 0.1 & res_bs$log2FoldChange < 0),])
#Had better do some filtering to make the ratio more robust.
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
#filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
#Had better do some filtering to make the ratio more robust.
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
#filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven/loss10//Aech_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Aech.blast',header = F)
blast_result$V1 = gsub('Aech_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
#gene_age[which(rownames(gene_age) %in% blast_result$V1 & gene_age$age == 'TRG'),'age'] = 'homolog'
head(tx2gene)
library("pheatmap")
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1:3)]- rowMeans(mpha_exp[,c(1:3)]),mpha_exp[,c(4:6)]- rowMeans(mpha_exp[,c(4:6)]),mpha_exp[,c(7:9)]- rowMeans(mpha_exp[,c(7:9)]),
#                 mpha_exp[,c(10:12)]- rowMeans(mpha_exp[,c(10:12)]))
#head(mpha_exp)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
######
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_10/Aech_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss20/Aech_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
#blast_result = read.table('../blast_result/Aech.blast',header = F)
#blast_result$V1 = gsub('Aech_','', blast_result$V1)
#blast_result = blast_result[which(blast_result$V13 < 1e-5),]
#gene_age[which(rownames(gene_age) %in% blast_result$V1 & gene_age$age == 'TRG'),'age'] = 'homolog'
head(tx2gene)
library("pheatmap")
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1:3)]- rowMeans(mpha_exp[,c(1:3)]),mpha_exp[,c(4:6)]- rowMeans(mpha_exp[,c(4:6)]),mpha_exp[,c(7:9)]- rowMeans(mpha_exp[,c(7:9)]),
#                 mpha_exp[,c(10:12)]- rowMeans(mpha_exp[,c(10:12)]))
#head(mpha_exp)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
######
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_20/Aech_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss05//Aech_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
#blast_result = read.table('../blast_result/Aech.blast',header = F)
#blast_result$V1 = gsub('Aech_','', blast_result$V1)
#blast_result = blast_result[which(blast_result$V13 < 1e-5),]
#gene_age[which(rownames(gene_age) %in% blast_result$V1 & gene_age$age == 'TRG'),'age'] = 'homolog'
head(tx2gene)
library("pheatmap")
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1:3)]- rowMeans(mpha_exp[,c(1:3)]),mpha_exp[,c(4:6)]- rowMeans(mpha_exp[,c(4:6)]),mpha_exp[,c(7:9)]- rowMeans(mpha_exp[,c(7:9)]),
#                 mpha_exp[,c(10:12)]- rowMeans(mpha_exp[,c(10:12)]))
#head(mpha_exp)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
######
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% minor_bias] = 'minor'
gene_age$caste[gene_age$geneID %in% major_bias] = 'major'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','major','minor','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_05/Aech_age_odd.csv',sep = '\t',quote = F)
