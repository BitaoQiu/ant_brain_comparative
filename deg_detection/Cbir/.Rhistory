table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
summary(res$pad)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
library("pheatmap")
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:8000]
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 8000)
vsd <- varianceStabilizingTransformation(dds, blind=T)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
vsd <- varianceStabilizingTransformation(dds, blind=T)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:200]
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 200)
plotMA(res)
table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
vsd <- varianceStabilizingTransformation(dds, blind=F)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:8000]
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:200]
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
library("pheatmap")
vsd <- varianceStabilizingTransformation(dds, blind=F)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
select <- sample(dim(dds)[1],4000)
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=T, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 200)
plotMA(res)
table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
library("pheatmap")
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
vsd <- varianceStabilizingTransformation(dds, blind=F)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
select <- sample(dim(dds)[1],4000)
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=F, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 200)
plotMA(res)
table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
summary(res$pad)
summary(res)
res[order(abs(res$log2FoldChange),decreasing = T)[c(1:10)],]
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
rep(c('gyne','worker'),4)
abundance = txi.salmon$abundance
gyne_worker = c()
for(i in seq(1,4,1)){
index = (i-1)*2 + 1
gyne_worker[i] = cor(abundance[,index],abundance[,(index+1)],method = 'k')}
gyne_worker
gyne_exp = rowMedians(abundance[,seq(1,8,2)])
worker_exp = rowMedians(abundance[,seq(2,8,2)])
cor(gyne_exp,worker_exp,method = 'k')
round(gyne_worker,2)
round(gyne_worker,3)
round(gyne_worker,2)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
abundance = txi.salmon$abundance
gyne_worker = c()
gyne_exp = matrix(abundance[,seq(1,8,2)],ncol = 1)
worker_exp = matrix(abundance[,seq(2,8,2)], ncol = 1)
cor(gyne_exp,worker_exp,method = 'k')
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
abundance = txi.salmon$abundance
gyne_worker = c()
gyne_exp = matrix(abundance[,seq(1,8,2)],ncol = 1)
for(i in seq(1,4,1)){
index = (i-1)*2 + 1
gyne_worker[i] = cor(abundance[,index],abundance[,(index+1)],method = 'k')}
worker_exp = matrix(abundance[,seq(2,8,2)], ncol = 1)
cor(gyne_exp,worker_exp,method = 'k')
round(gyne_worker,2)
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeq(dds)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 8, ]
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
library("pheatmap")
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:1000]
vsd <- varianceStabilizingTransformation(dds, blind=F)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
select <- sample(dim(dds)[1],4000)
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=F, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 200)
plotMA(res)
table(abs(res$log2FoldChange) > 1)
summary(res$pad<0.1)
summary(res$pad)
summary(res)
res[order(abs(res$log2FoldChange),decreasing = T)[c(1:10)],]
test_gene = 'gene_14666'
plotCounts(dds, gene=test_gene, intgroup="condition",col = batch, pch = 19)
res[test_gene,]
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowSums(counts(dds)) > 8),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny/Cbir_age.txt',header = T)
head(tx2gene)
mpha_exp = abundance#assay(vsd)
head(abundance)
mpha_exp = log2(mpha_exp[,c(1:4)]/abundance[,c(5:8)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
library("pheatmap")
library("RColorBrewer")
levels(gene_age$age) = c('Neoptera','Endopterygota','Hymenoptera','Aprocrita','Aculeata','Formicidae','Myrmicinae','Species specific')
levels(gene_age$caste) = c("Gyne bias","Worker bias","NDE")
n = 500
tmp_caste = c(as.character(sample(gene_age[which(gene_age$caste %in% c('Gyne bias','Worker bias')),'geneID'], n)))
tmp = tmp_caste
age_bias = data.frame(Evolutionary.origin = gene_age$age[match(tmp, gene_age$geneID)],
Average.connectivity = apply(abs(mpha_net[tmp,tmp]),1,mean),
row.names = tmp)
caste_bias = data.frame("Caste.expression" = gene_age$caste[match(tmp_caste, gene_age$geneID)],
row.names = tmp_caste)
caste_bias = data.frame("Caste.expression" = res$log2FoldChange[match(tmp_caste, rownames(res))],
row.names = tmp_caste)
caste_bias$Caste.expression[abs(caste_bias$Caste.expression) >
max(caste_bias$Caste.expression)] = -max(caste_bias$Caste.expression)
caste_bias$Caste.expression[caste_bias$Caste.expression >
abs(min(caste_bias$Caste.expression))] = abs(min(caste_bias$Caste.expression))
colnames(caste_bias) = "log2(caste expression ratio)"
tmp_col = gray.colors(8, start = 0.1, end = .9,gamma = 2.8)
ann_colors = list(
Evolutionary.origin = c(Neoptera =tmp_col[1],Endopterygota = tmp_col[2],Hymenoptera=tmp_col[3],Aprocrita = tmp_col[4],Aculeata = tmp_col[5],
Formicidae = tmp_col[6],Myrmicinae = tmp_col[7],`Species specific` = tmp_col[8]),
# "Caste.expression" = c(`Gyne bias` = rgb(1,0,0,0.5),`Worker bias` = rgb(0,0,1,0.5),NDE = rgb(0,0,0,.1)),
"log2(caste expression ratio)" = colorRampPalette(c(rgb(62,113,178, maxColorValue = 255),"white", rgb(215,50,40,maxColorValue = 255)),interpolate ='linear', alpha = TRUE)(100),
Average.connectivity = colorRampPalette( (brewer.pal(9, "Blues")) )(255))
pheatmap((mpha_net[tmp_caste,tmp_caste]), cluster_rows=T, show_rownames=F,show_colnames = F, cluster_cols=T,annotation_col=age_bias,annotation_row = caste_bias,
annotation_colors = ann_colors,main = "L.humile",clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation')
boxplot(ac ~ age, data = gene_age[gene_age$caste!= "NDE",])
abline(h = median(gene_age$ac[gene_age$age == 'Neoptera' & gene_age$caste!= "NDE"]))
pheatmap((mpha_net[tmp_caste,tmp_caste]), cluster_rows=T, show_rownames=F,show_colnames = F, cluster_cols=T,annotation_col=age_bias,annotation_row = caste_bias,
annotation_colors = ann_colors,main = "L.humile",clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation')
caste_gene = as.character(gene_age[which(gene_age$caste %in% c('Gyne bias','Worker bias','NDE')),'geneID'])
caste_net = mpha_net[caste_gene,caste_gene]
caste_ac = data.frame(ac = apply(abs(caste_net),1,mean),
age = gene_age$age[match(caste_gene, gene_age$geneID)],
caste = droplevels(gene_age$caste[match(caste_gene, gene_age$geneID)]),
log2 = res$log2FoldChange[match(caste_gene, rownames(res))])
head(caste_ac)
boxplot(ac ~ age , data = caste_ac)
library(ggplot2)
gene_caste_age = data.frame(table( gene_age$age,gene_age$caste))
gene_caste_age_test = cbind(gene_caste_age[c(1:8),c(1,3)],gene_caste_age[c(9:16),c(3)],gene_caste_age[c(17:24),c(3)])
colnames(gene_caste_age_test) = c('age','gyne','worker','NDE')
gene_caste_age_test$all = rowSums(gene_caste_age_test[,c(2:4)])
fit_worker = glm(cbind(worker,NDE+gyne) ~ age, family=binomial,data = gene_caste_age_test)
fit_gyne = glm(cbind(gyne,NDE+worker) ~ age, family=binomial,data = gene_caste_age_test)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
gene_caste_age$Freq =log2(gene_caste_age$Freq/rep(table(gene_age$age),3)/(rep(table(gene_age$caste)/nrow(gene_age),each = 8)))
colnames(gene_caste_age) = c('Age','Caste','Proportion')
head(gene_age)
ggplot(data = gene_caste_age, aes(y = Proportion, x = Age, col = Caste, group = Caste))+
geom_point()+ geom_line() + ylim(c(-3,3))
library(ggplot2)
gene_caste_age = data.frame(table( gene_age$age,gene_age$caste))
gene_caste_age$Percentage = gene_caste_age$Freq/rep(table(gene_age$caste),each = 8)
gene_caste_age$Freq = gene_caste_age$Freq/rep(table(gene_age$age),3)
gene_caste_age$ratio = log2(gene_caste_age$Freq/(rep(table(gene_age$caste)/nrow(gene_age),each = 8)))
colnames(gene_caste_age) = c('Origin','Caste','Proportion','Percentage','Ratio')
head(gene_age)
ggplot(data = gene_caste_age, aes(y = Percentage, x = Origin, col = Caste, group = Caste))+
geom_point()+ geom_line()+ ylim(c(0,1))+ylab('Percentage of genes in caste category') + xlab("Origin of gene") + labs(title = 'Linepithema humile')
ggplot(data = gene_caste_age, aes(y = Proportion, x = Origin, col = Caste, group = Caste))+
geom_point()+ geom_line()+ ylim(c(0,.8))+ylab('Proportion of genes within evolutionary origin') + xlab("Origin of gene") + labs(title = 'Linepithema humile')
ggplot(data = gene_caste_age, aes(y = Percentage, x = Origin, col = Caste, group = Caste))+
geom_point()+ geom_line()+ ylim(c(0,1))+ylab('Percentage of genes in caste category') + xlab("Origin of gene") + labs(title = 'Linepithema humile')
ggplot(data = gene_caste_age, aes(y = Percentage, x = Origin, col = Caste, group = Caste))+
geom_point()+ geom_line()+ ylim(c(0,1))+ylab('Percentage of genes in caste category') + xlab("Origin of gene") + labs(title = 'Linepithema humile')
frequency = as.matrix(table( gene_age$age,gene_age$caste))
out_data = t(frequency/rowSums(frequency))
heatmap(out_data)
write.table(out_data,'Cbir.csv',quote = F, row.names = T, col.names = T)
write.table(gene_caste_age,'Cbir_age_table.csv',quote = F, sep = '\t',row.names = T, col.names = T)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
abundance = txi.salmon$abundance
gyne_worker = c()
for(i in seq(1,4,1)){
index = (i-1)*2 + 1
gyne_worker[i] = cor(abundance[,index],abundance[,(index+1)],method = 'k')}
gyne_exp = matrix(abundance[,seq(1,8,2)],ncol = 1)
worker_exp = matrix(abundance[,seq(2,8,2)], ncol = 1)
cor(gyne_exp,worker_exp,method = 'k')
round(gyne_worker,2)
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
res <- results(dds,contrast = c('condition','gyne','worker'))
dds <- DESeq(dds)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
summary(res)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
dim(dds)
dim(res)
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Cbir_age.txt',header = T)
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Cbir_age_odd.csv',sep = '\t',quote = F)
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny/Cbir_age.txt',header = T)
gene_age = read.table('../../synteny_seven//Cbir_age.txt',header = T)
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(mpha_exp[,c(1:4)]/abundance[,c(5:8)])#assay(vsd)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Cbir_age.txt',header = T)
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(mpha_exp[,c(1:4)]/abundance[,c(5:8)])#assay(vsd)
dim(mpha_exp)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age = read.table('../../synteny_seven//Cbir_age.txt',header = T)
head(tx2gene)
mpha_exp = abundance#assay(vsd)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
head(filter)
head(gene_age)
gene_age = gene_age[which(gene_age$geneID %in% filter),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Cbir_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
abundance = txi.salmon$abundance
gyne_worker = c()
for(i in seq(1,4,1)){
index = (i-1)*2 + 1
gyne_worker[i] = cor(abundance[,index],abundance[,(index+1)],method = 'k')}
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
summary(res)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Cbir_age.txt',header = T)
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(mpha_exp[,c(1:4)]/abundance[,c(5:8)])#assay(vsd)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% filter),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Cbir_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Cbir_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res)
library(tximport)
library('DESeq2')
lhum_files = paste('Cbir',c(1:8),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Cbir_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(rep(c('gyne','worker'),4))
colony = factor(rep(c(1:4),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
summary(res)
write.table(res, "Cbir_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
