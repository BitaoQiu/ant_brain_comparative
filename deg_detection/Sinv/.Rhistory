mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Sinv_age_odd.csv',sep = '\t',quote = F)
as.data.frame(table(gene_age$caste,gene_age$age))
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds, c('condition','gyne','worker'))
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
summary(res)
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 6),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny/Sinv_age.txt',header = T)
gene_age = read.table('../../synteny/Sinv_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library(RUVSeq)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
library(ggplot2)
gene_caste_age = data.frame(table( gene_age$age,gene_age$caste))
gene_caste_age
gene_caste_age_test = cbind(gene_caste_age[c(1:9),c(1,3)],gene_caste_age[c(10:18),c(3)],gene_caste_age[c(19:27),c(3)])
colnames(gene_caste_age_test) = c('age','gyne','worker','NDE')
gene_caste_age_test$all = rowSums(gene_caste_age_test[,c(2:4)])
summary(glm(cbind(worker,NDE+gyne) ~ age, family=binomial,data = gene_caste_age_test))
summary(glm(cbind(gyne,NDE+worker) ~ age, family=binomial,data = gene_caste_age_test))
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(-3.421676)
gene_caste_age$Freq = log2(gene_caste_age$Freq/rep(table(gene_age$age),3)/(rep(table(gene_age$caste)/nrow(gene_age),each = 9)))
library(ggplot2)
gene_caste_age = data.frame(table( gene_age$age,gene_age$caste))
gene_caste_age_test = cbind(gene_caste_age[c(1:9),c(1,3)],gene_caste_age[c(10:18),c(3)],gene_caste_age[c(19:27),c(3)])
colnames(gene_caste_age_test) = c('age','gyne','worker','NDE')
gene_caste_age_test$all = rowSums(gene_caste_age_test[,c(2:4)])
summary(glm(cbind(worker,NDE+gyne) ~ age, family=binomial,data = gene_caste_age_test))
summary(glm(cbind(gyne,NDE+worker) ~ age, family=binomial,data = gene_caste_age_test))
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(-3.421676)
gene_caste_age$Freq = log2(gene_caste_age$Freq/rep(table(gene_age$age),3)/(rep(table(gene_age$caste)/nrow(gene_age),each = 9)))
gene_caste_age$Freq/rep(table(gene_age$age),3)
(rep(table(gene_age$caste)/nrow(gene_age),each = 9))
gene_caste_age$Freq = log2(gene_caste_age$Freq/rep(table(gene_age$age),3)/(rep(table(gene_age$caste)/nrow(gene_age),each = 8)))
colnames(gene_caste_age) = c('Age','Caste','Proportion')
head(gene_age)
ggplot(data = gene_caste_age, aes(y = Proportion, x = Age, col = Caste, group = Caste))+
geom_point()+ geom_line()+ ylim(c(-3,3))
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 6),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library(RUVSeq)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
gene_age
as.data.frame(table(gene_age$caste,gene_age$age))
dim(gene_age)
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T)
dim(gene_age)
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 6),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
library(RUVSeq)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Sinv_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds, c('condition','gyne','worker'))
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Sinv_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(1,2,5,6,9,10,13,14),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_P_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(tximport)
library('DESeq2')
lhum_files = paste('Sinv',c(1:16),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(rep(c('PVQ','PW','AVQ','AW'),4))
colony = factor(rep(c(1:4),each = 4))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 16, ]
dds <- DESeq(dds)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
plotPCA(vsd, intgroup=c("condition"),ntop = 200)
plotPCA(vsd, intgroup=c("condition"),ntop = 2000)
plotPCA(vsd, intgroup=c("condition"),ntop = 10000)
plotPCA(vsd, intgroup=c("condition"),ntop = 15000)
df <- as.data.frame(colData(dds)[,c("condition",'colony')])
select <- sample(dim(dds)[1],4000)
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=F, cluster_cols=T,annotation_col=sampleTable)
library("pheatmap")
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=F, cluster_cols=T,annotation_col=sampleTable)
plotPCA(vsd, intgroup=c("condition"),ntop = 15000)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),apha = 0.05)
summary(res)
res <- results(dds,contrast = c('condition','gyne','worker'),apha = 0.05)
summary(res)
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
gyne_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 6),])
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Sinv_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
gyne_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
gyne_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Sinv_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Sinv.blast',header = F)
blast_result$V1 = gsub('Sinv_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Sinv_age_odd.csv',sep = '\t',quote = F)
write.table(as.matrix(table(gene_age$caste,gene_age$age)),'~/Documents/CSE_Projects/submit/PNAS/Sinv_age.tsv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
aech_files = c(paste('Sinv',c(3,4,7,8,11,12,15,16),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Sinv_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
#########
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:4),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Sinv_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
gyne_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
#Had better do some filtering to make the ratio more robust.
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
#filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven/loss10//Sinv_age.txt',header = T,stringsAsFactors = F)
#head(tx2gene)
#library(RUVSeq)
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))
#mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#boxplot(ac ~age,data = gene_age,xlab = 'Origin of genes',ylab = "Average connectivities")
#abline(h = median(gene_age$ac[gene_age$age == 'neoptera']))
#t.test(gene_age$ac[gene_age$caste == 'gyne'],gene_age$ac[gene_age$caste == 'worker'])
table(gene_age$age)
######
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_10/Sinv_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss20//Sinv_age.txt',header = T,stringsAsFactors = F)
#head(tx2gene)
#library(RUVSeq)
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))
#mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#boxplot(ac ~age,data = gene_age,xlab = 'Origin of genes',ylab = "Average connectivities")
#abline(h = median(gene_age$ac[gene_age$age == 'neoptera']))
#t.test(gene_age$ac[gene_age$caste == 'gyne'],gene_age$ac[gene_age$caste == 'worker'])
table(gene_age$age)
######
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_20/Sinv_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss05//Sinv_age.txt',header = T,stringsAsFactors = F)
#head(tx2gene)
#library(RUVSeq)
#mpha_exp = abundance#assay(vsd)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))
#mpha_exp = log2(abundance[,seq(1,8,2)]/abundance[,seq(2,8,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#boxplot(ac ~age,data = gene_age,xlab = 'Origin of genes',ylab = "Average connectivities")
#abline(h = median(gene_age$ac[gene_age$age == 'neoptera']))
#t.test(gene_age$ac[gene_age$caste == 'gyne'],gene_age$ac[gene_age$caste == 'worker'])
table(gene_age$age)
######
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_05/Sinv_age_odd.csv',sep = '\t',quote = F)
