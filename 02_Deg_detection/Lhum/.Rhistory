mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
table(gene_age$caste,gene_age$age)
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Lhum_age_odd.csv',sep = '\t',quote = F)
as.data.frame(table(gene_age$caste,gene_age$age))
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds, c('condition','gyne','worker'))
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
summary(res)
library("pheatmap")
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(3:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds, c('condition','gyne','worker'))
summary(res)
filter = rownames(dds[which(rowMeans(counts(dds)) > 1),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
blast_result$V1 = gsub('Lhum_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
blast_result$V1 = gsub('Lhum_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Lhum_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds <- DESeq(dds)
res <- results(dds, c('condition','gyne','worker'))
summary(res)
gyne_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.1 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 1),])
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
blast_result$V1 = gsub('Lhum_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
mpha_exp = abundance#assay(vsd)
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Lhum_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
res <- results(dds,contrast = c('condition','gyne','worker'))
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
res <- results(dds,contrast = c('condition','gyne','worker'))
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Lhum_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Lhum_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Lhum_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res)
gyne_bias = rownames(res[which(res$padj <  0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
blast_result$V1 = gsub('Lhum_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T)
gene_age$age = as.character(gene_age$age)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Lhum_age_odd.csv',sep = '\t',quote = F)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Lhum_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res)
gyne_bias = rownames(res[which(res$padj <  0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Lhum_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
blast_result$V1 = gsub('Lhum_','', blast_result$V1)
blast_result = blast_result[which(blast_result$V13 < 1e-5),]
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Lhum_age_odd.csv',sep = '\t',quote = F)
write.table(as.matrix(table(gene_age$caste,gene_age$age)),'~/Documents/CSE_Projects/submit/PNAS/Lhum_age.tsv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
lhum_files = paste('Lhum',c(1:10),sep ='_')
files <- file.path('quants', lhum_files, "quant.sf")
names(files) <- lhum_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
#########
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
plot(hclust(dist(t(log(txi.salmon$counts +1)))))
abundance = txi.salmon$abundance
# Between gyne and workers:
batch = factor(rep(c('gyne','worker'),5))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- dds[ rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'))
######
library("pheatmap")
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:200]
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
library(base)
library(tximport)
library('DESeq2')
aech_files = c(paste('Lhum',c(1:10),sep ='_'))
files <- file.path('quants', aech_files, "quant.sf")
names(files) <- aech_files
tx2gene <- read.csv('Lhum_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
#########
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
batch = factor(c(rep(c('gyne','worker'),4)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(2:5),each = 2)))#,c(1,4,5,5)))
batch = factor(c(rep(c('gyne','worker'),5)))#,     c('minor','gyne','minor','gyne')))
colony = factor(c(rep(c(1:5),each = 2)))#,c(1,4,5,5)))
sampleTable <- data.frame(condition = batch, colony = colony)#,     type = c(rep('A',15),rep('B',4)))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition  + colony)# + type )
dds = DESeq(dds)
res <- results(dds,contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res <- lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Lhum_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
summary(res)
#res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
gyne_bias = rownames(res[which(res$padj <  0.05 & res$log2FoldChange > 0),])
worker_bias = rownames(res[which(res$padj < 0.05 & res$log2FoldChange < 0),])
#Had better do some filtering to make the ratio more robust.
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven/loss10//Lhum_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
blast_result = read.table('../blast_result/Lhum.blast',header = F)
#blast_result = read.table('../blast_result/Lhum.blast',header = F)
#blast_result$V1 = gsub('Lhum_','', blast_result$V1)
#blast_result = blast_result[which(blast_result$V13 < 1e-5),]
#gene_age[which(rownames(gene_age) %in% blast_result$V1 & gene_age$age == 'TRG'),'age'] = 'homolog'
head(tx2gene)
#mpha_exp = scale(mpha_exp)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))#,mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
#mpha_exp = mpha_exp[,sample(colnames(mpha_exp),8)]
#mpha_exp = log(mpha_exp)
#mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#wilcox.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_10/Lhum_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss20//Lhum_age.txt',header = T,stringsAsFactors = F)
gene_age$age = as.character(gene_age$age)
#blast_result = read.table('../blast_result/Lhum.blast',header = F)
#blast_result$V1 = gsub('Lhum_','', blast_result$V1)
#blast_result = blast_result[which(blast_result$V13 < 1e-5),]
#gene_age[which(rownames(gene_age) %in% blast_result$V1 & gene_age$age == 'TRG'),'age'] = 'homolog'
head(tx2gene)
#mpha_exp = scale(mpha_exp)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))#,mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
#mpha_exp = mpha_exp[,sample(colnames(mpha_exp),8)]
#mpha_exp = log(mpha_exp)
#mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#wilcox.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_20/Lhum_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss05///Lhum_age.txt',header = T,stringsAsFactors = F)
#mpha_exp = scale(mpha_exp)
#mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
#                 mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]))#,mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
#mpha_exp = mpha_exp[,sample(colnames(mpha_exp),8)]
#mpha_exp = log(mpha_exp)
#mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
#mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
#mpha_net = cor(t(mpha_exp),method= 's')
#####
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#gene_age$ac = mpha_net_ac[match(gene_age$geneID,names(mpha_net_ac))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
#gene_age = gene_age[!is.na(gene_age$ac),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#wilcox.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
#####
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_05/Lhum_age_odd.csv',sep = '\t',quote = F)
