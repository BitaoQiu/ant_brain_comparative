dds <- dds[ rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
library("pheatmap")
filter = rownames(dds[which(rowSums(counts(dds)) > 10),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny/Mpha_age.txt',header = T)
head(tx2gene)
library(RUVSeq)
mpha_exp =  abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]),mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
levels(gene_age$age) = c('Neoptera','Endopterygota','Hymenoptera','Aprocrita','Aculeata','Formicidae','Myrmicinae','Species specific')
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
as.data.frame(table(gene_age$caste,gene_age$age))
library("pheatmap")
filter = rownames(dds[which(rowSums(counts(dds)) > 10),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny/Mpha_age.txt',header = T)
head(tx2gene)
library(RUVSeq)
mpha_exp =  abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]),mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
as.data.frame(table(gene_age$caste,gene_age$age))
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
summary(res)
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 6),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Mpha_age.txt',header = T)
head(tx2gene)
library(RUVSeq)
mpha_exp =  abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]),mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
mpha_exp = log2(abundance[,seq(1,10,2)]/abundance[,seq(2,10,2)])#assay(vsd)
mpha_exp = mpha_exp[!apply(mpha_exp,1,sd) == 0,]
mpha_net = cor(t(mpha_exp),method= 's')
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
summary(res)
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Mpha_age.txt',header = T)
head(tx2gene)
library(RUVSeq)
mpha_exp =  abundance#assay(vsd)
mpha_exp = cbind(mpha_exp[,c(1,2)]- rowMeans(mpha_exp[,c(1,2)]),mpha_exp[,c(3,4)]- rowMeans(mpha_exp[,c(3,4)]),mpha_exp[,c(5,6)]- rowMeans(mpha_exp[,c(5,6)]),
mpha_exp[,c(7,8)]- rowMeans(mpha_exp[,c(7,8)]),mpha_exp[,c(9,10)]- rowMeans(mpha_exp[,c(9,10)]))
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
head(abundance)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
tximport(files, type = 'salmon')
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
txi.salmon$countsFromAbundance
txi.salmon$abundance
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,txOut = T,
countsFromAbundance = 'lengthScaledTPM')
head(txi.salmon)
head(txi.salmon$abundance)
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,txOut = T,
countsFromAbundance = 'lengthScaledTPM')
txi.salmon$abundance[transcriptID,]
transcriptID = c("DQUA_RNA19970_R0",'MPHA_RNA7996_R0','DQUA_RNA13901_R0','MPHA_RNA23639_R0','MPHA_RNA20977_R0',
'MPHA_RNA20979_R0','MPHA_RNA20982_R0','DMEL_RNA5636_R0','MPHA_RNA7206_R0',
'DQUA_RNA3091_R0','LHUM_RNA8786_R0','AECH_RNA14193_R0','MPHA_RNA22102_R0')
txi.salmon$abundance[transcriptID,]
txi.salmon$length
txi.salmon$abundance[transcriptID,]
colSums(txi.salmon$abundance)
transcript_check = txi.salmon$abundance[transcriptID,]
transcript_check$median = rowMedians(transcript_check)
transcript_check$median = apply(transcript_check,1,median)
transcript_check = data.frame(transcript_check)
transcript_check$median = apply(transcript_check,1,median)
View(transcript_check)
transcript_check = txi.salmon$abundance[transcriptID,]
head(transcript_check)
transcript_check
transcript_check = as.data.frame(transcript_check)
View(transcript_check)
transcript_check$median = apply(transcript_check,1,median)
View(transcript_check)
transcript_check = txi.salmon$counts[transcriptID,]
transcript_check = as.data.frame(transcript_check)
transcript_check$median = apply(transcript_check,1,median)
View(transcript_check)
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
head(abundance)
abundance[c('gene_6342','gene_14962','gene_13520'),]
abundance[c('gene_6342','gene_14962','gene_13520','gene_5947','gene_10919','gene_14121'),]
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
res[c('gene_6342','gene_14962','gene_13520','gene_5947','gene_10919','gene_14121'),]
dds@assays
res@metadata
dds$gene_0
dds@rowRanges
dds@colData
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,txOut = T,
countsFromAbundance = 'lengthScaledTPM')
txi.salmon$countsFromAbundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
summary(res)
res[transcriptID,]
data.frame(res[transcriptID,])
transcript_check = data.frame(res[transcriptID,])
View(transcript_check)
tx2gene
tx2gene[transcriptID,]
tx2gene[tx2gene$V1 == transcriptID,]
tx2gene[match(transcriptID,tx2gene$V1),]
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'))
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Mpha_age.txt',header = T)
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(mpha_exp)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.1 & res$log2FoldChange < 0),])
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
as.data.frame(table(gene_age$caste,gene_age$age))
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t')
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Mpha_age.txt',header = T)
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
library("pheatmap")
filter = rownames(dds[which(rowMax(counts(dds)) > 5),])
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven//Mpha_age.txt',header = T,stringsAsFactors = F)
head(tx2gene)
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
table(gene_age$age)
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'Mpha_age_odd.csv',sep = '\t',quote = F)
write.table(as.matrix(table(gene_age$caste,gene_age$age)),'~/Documents/CSE_Projects/submit/PNAS/Mpha_age.tsv',sep = '\t',quote = F)
library(tximport)
library('DESeq2')
mpha_files = c(paste('Mpha',c(1:6,'7x',8,'9x',10),sep ='_'))#, paste('Mpha',c('7x','9x'),sep ='_'))
files <- file.path('quants', mpha_files, "quant.sf")
names(files) <- mpha_files
tx2gene <- read.csv('Mpha_gemoma_t2g.txt',header = F, sep = '\t',stringsAsFactors = F)
tx2gene$V1 = toupper(tx2gene$V1)
files
#########
txi.salmon <- tximport(files, type = "salmon", tx2gene = tx2gene,
countsFromAbundance = 'lengthScaledTPM')
abundance = txi.salmon$abundance
# Between gyne and workers:
batch = factor(c(rep(c('gyne','worker'),5)))#,rep('gyne',2)))
colony = factor(rep(c(1:5),each = 2))
sampleTable <- data.frame(condition = batch, colony = colony)#, type = factor(c(rep('A',10),rep('B',2))))
rownames(sampleTable) <- colnames(txi.salmon$counts)
dds <- DESeqDataSetFromTximport(txi.salmon, sampleTable,
~condition + colony)
#dds <- dds[ rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
res <- results(dds, contrast = c('condition','gyne','worker'),alpha = 0.05)
summary(res)
res = lfcShrink(dds, contrast=c("condition","gyne","worker"), res=res)
write.table(res, "Mpha_gyne_worker.csv",quote = F, row.names = T, col.names = T, sep = '\t')
#Had better do some filtering to make the ratio more robust.
library("pheatmap")
filter = rownames(dds[which(rowMeans(counts(dds)) > 0),])
abundance = txi.salmon$abundance[which(row.names(txi.salmon$abundance) %in% filter),] + 0.01
gene_age = read.table('../../synteny_seven/loss10//Mpha_age.txt',header = T,stringsAsFactors = F)
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#head(tx2gene)
#library(RUVSeq)
mpha_exp =  abundance#assay(vsd)
#gene_age$ac = tmp_gene_cor_accumulate[match(gene_age$geneID,names(tmp_gene_cor_accumulate))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#t.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
######
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_10/Mpha_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss20//Mpha_age.txt',header = T,stringsAsFactors = F)
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#gene_age$ac = tmp_gene_cor_accumulate[match(gene_age$geneID,names(tmp_gene_cor_accumulate))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#t.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
######
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_20/Mpha_age_odd.csv',sep = '\t',quote = F)
gene_age = read.table('../../synteny_seven/loss05//Mpha_age.txt',header = T,stringsAsFactors = F)
#mpha_net_ac = apply(mpha_net,1,FUN = function(x){sum(sort(abs(x),decreasing = T)[1:1000])})
gene_age$geneID = tx2gene$V2[match(rownames(gene_age),tx2gene$V1)]
#gene_age$ac = tmp_gene_cor_accumulate[match(gene_age$geneID,names(tmp_gene_cor_accumulate))]/1000
gene_age = gene_age[which(gene_age$geneID %in% rownames(abundance)),]
gene_age$age = factor(gene_age$age,
levels = c('neoptera','endopterygota','hymenoptera','aprocrita','aculeata','formicidae','myrmicinae','TRG'))
#t.test(gene_age$ac[gene_age$age == 'neoptera'],gene_age$ac[gene_age$age == 'TRG'])
table(gene_age$age)
######
worker_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange < 0),])
gyne_bias = row.names(res[which(res$padj< 0.05 & res$log2FoldChange > 0),])
gene_age$caste = 'non-bias'
gene_age$caste[gene_age$geneID %in% worker_bias] = 'worker'
gene_age$caste[gene_age$geneID %in% gyne_bias] = 'gyne'
gene_age$caste = factor(gene_age$caste, levels = c('gyne','worker','non-bias'))
write.table(as.data.frame(table(gene_age$caste,gene_age$age)),'../gene_age_five_05/Mpha_age_odd.csv',sep = '\t',quote = F)
